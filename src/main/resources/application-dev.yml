server:
  port: 8080
  servlet:
    encoding:
      charset: utf-8
      force: true

spring:
  config:
    activate:
      on-profile: dev
  web:
    resources:
      add-mappings: false
  datasource:
    url: jdbc:mysql://${rds_hostname}:${rds_port}/${rds_db_name}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${rds_username}
    password: ${rds_password}
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    throw-exception-if-no-handler-found: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 3MB
      max-request-size: 1MB
  redis:
    host: localhost
    port: 6379

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update #create update none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 100
  quartz:
    properties:
      org.quartz:
        scheduler:
            jobFactory.class: org.quartz.simpl.PropertySettingJobFactory
            instanceId: AUTO
        threadPool:
          class: org.quartz.simpl.SimpleThreadPool
          threadCount: '5'
        jobStore:
          class: org.quartz.impl.jdbcjobstore.JobStoreTX
          driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
          dataSource: quartzDataSource
          misfireThreshold: '60000'
          isClustered: true
          clusterCheckinInterval: '15000'
        dataSource:
          quartzDataSource:
            URL: jdbc:mysql://${rds_hostname}:${rds_port}/${rds_quartz_db_name}
            driver: com.mysql.cj.jdbc.Driver
            user: ${rds_username}
            password: ${rds_password}
            provider: hikaricp
        jdbc:
          initialize-schema: never

logging:
  level:
    '[com.server.oceankeeper]': DEBUG
    '[org.hibernate.type]': TRACE
    root: INFO
  logback:
    rollingpolicy:
      max-history: 30
      max-file-size: 100MB
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}-%i.log
  file:
    name: logs/oceankeeper.log
  pattern:
    dateformat: yyyy-MM-dd HH:mm:ss.SSS,Asia/Seoul

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}

    s3:
      bucket: ${S3_BUCKET_NAME}
    region:
      static: ap-northeast-2
    stack:
      auto: false
jwt:
  password: ${JWT_PASSWORD}
  secret: ${JWT_SECRET}

fcm:
  time: 3600